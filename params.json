{"name":"jLCM","tagline":"A multi-threaded implementation of the LCM algorithm","body":"# jLCM\r\n\r\nA Java implementation of the LCM (Linear Closed itemsets Miner) algorithm, as proposed by T.Uno & H.Arimura. It is multi-threaded, as proposed by Négrevergne et al., hence the name of its main class: PLCM.\r\n\r\nReference papers:\r\n\r\n* \"An efficient algorithm for enumerating closed patterns in transaction \r\ndatabases\" by T. Uno, T. Asai, Y. Uchida and H. Arimura, in Discovery Science, \r\n2004\r\n* \"Discovering closed frequent itemsets on multicore: Parallelizing computations \r\nand optimizing memory accesses\" by B. Negrevergne, A. Termier, J-F. Mehaut, \r\nand T. Uno in International Conference on High Performance Computing & \r\nSimulation, 2010\r\n\r\nPlease use [Maven](http://maven.apache.org/) to build the program. \r\n\r\n## jLCM as a command-line utility\r\n\r\nDownload [jLCM-cli's JAR](https://github.com/slide-lig/jlcm-cli/raw/binary/jLCM-cli-1.7.0-wdeps.jar) and invoke `java -jar jLCM-cli-1.7.0-wdeps.jar` to show the complete manual. Note that this program's `main` function lives in [a separated project](https://github.com/slide-lig/jlcm-cli/).\r\n\r\nThis tool uses ASCII files as input: each line represents a transaction (using UNIX line terminators). You may find example input files in the [FIMI repository](http://fimi.ua.ac.be/data/), or start with a small one embedded in `src/test/resources` like [50retail.dat](https://github.com/slide-lig/jlcm/raw/master/src/test/resources/50retail.dat).\r\n\r\n## jLCM as a library/Maven dependency\r\n\r\nAdd the following dependency to your `pom.xml`\r\n\r\n    <dependency>\r\n        <groupId>fr.liglab.jlcm</groupId>\r\n        <artifactId>jLCM</artifactId>\r\n        <version>1.7.0</version>\r\n    </dependency>\r\n\r\nTo perform the mining you will have to instanciate an `ExplorationStep`, a `PatternsCollector` and the main class `PLCM`. Depending on how you want to do the I/O you may have to implement your own `Iterable<TransactionReader>` (for input) and/or `PatternsWriter` (for output).\r\n\r\nThe [main class of jLCM-cli](https://github.com/slide-lig/jlcm-cli/blob/master/src/main/java/fr/liglab/jlcm/RunPLCM.java) provides an example use of the library.\r\n\r\n\r\n## License and copyright owners\r\n\r\nThis work is released under the Apache License 2.0 (see LICENSE).\r\n\r\nCopyright 2013,2014,2015,2016 Martin Kirchgessner, Vincent Leroy, Alexandre Termier, \r\nSihem Amer-Yahia, Marie-Christine Rousset, Université Joseph Fourier and CNRS.\r\n\r\n\r\n","google":"UA-47871577-1","note":"Don't delete this file! It's used internally to help with page regeneration."}